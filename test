kubectl create secret generic gitlab-runner-secret \
  --from-literal=runner-registration-token=YOUR_TOKEN \
  -n libdev-05075-metier-development
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitlab-runner
  namespace: libdev-05075-metier-development

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gitlab-runner
rules:
- apiGroups: [""]
  resources: ["pods", "pods/exec"]
  verbs: ["get", "list", "watch", "create", "delete", "patch", "update"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "create"]
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "create"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gitlab-runner
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gitlab-runner
subjects:
- kind: ServiceAccount
  name: gitlab-runner
  namespace: libdev-05075-metier-development
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab-runner
  namespace: libdev-05075-metier-development
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitlab-runner
  template:
    metadata:
      labels:
        app: gitlab-runner
    spec:
      serviceAccountName: gitlab-runner
      containers:
      - name: gitlab-runner
        image: gitlab/gitlab-runner:latest
        env:
        - name: CI_SERVER_URL
          value: "https://gitlab.example.com" # Replace with your GitLab instance URL
        - name: REGISTRATION_TOKEN
          valueFrom:
            secretKeyRef:
              name: gitlab-runner-secret
              key: runner-registration-token
        - name: RUNNER_EXECUTOR
          value: "kubernetes"
        volumeMounts:
        - name: config
          mountPath: /etc/gitlab-runner
      volumes:
      - name: config
        emptyDir: {}
[[runners]]
  name = "Kubernetes Runner"
  url = "https://scm.saas.cagip.group.gca/"
  token = "YOUR_SECRET_TOKEN"
  executor = "kubernetes"

  [runners.kubernetes]
    namespace = "libdev-05075-metier-development"
    privileged = true

  [runners.custom_build_dir]
    enabled = true

  [runners.cache]
    [runners.cache.s3]
      ServerAddress = "s3.amazonaws.com"
      AccessKey = "your-access-key"
      SecretKey = "your-secret-key"
    [runners.cache.gcs]
      CredentialsFile = "/path/to/credentials.json"

  [runners.environment]
    variables = ["ENV_VAR=value"]

  [[runners.kubernetes.volumes.host_path]]
    name = "ca-certs"
    mount_path = "/etc/gitlab-runner/certs"
    read_only = true
. Create the ConfigMap and Secret

kubectl create configmap gitlab-runner-config \
  --from-file=config.toml=config.toml \
  -n libdev-05075-metier-development
ecret for Certificate:
kubectl create secret generic gitlab-runner-cert \
  --from-file=ca.crt=ca.crt \
  -n libdev-05075-metier-development

pdate the Runner Deployment YAML
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab-runner
  namespace: libdev-05075-metier-development
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitlab-runner
  template:
    metadata:
      labels:
        app: gitlab-runner
    spec:
      serviceAccountName: gitlab-runner
      containers:
      - name: gitlab-runner
        image: gitlab/gitlab-runner:latest
        volumeMounts:
        - name: config-volume
          mountPath: /etc/gitlab-runner
        - name: cert-volume
          mountPath: /etc/gitlab-runner/certs
      volumes:
      - name: config-volume
        configMap:
          name: gitlab-runner-config
      - name: cert-volume
        secret:
          secretName: gitlab-runner-cert
